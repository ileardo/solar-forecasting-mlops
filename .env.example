# Solar Forecasting MLOps - Environment Configuration Template
# Copy this file to .env and configure your local values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
APP_NAME=solar-forecasting-mlops
APP_VERSION=0.1.0
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
# Main database for metrics, monitoring, and MLflow backend
DB_HOST=localhost
DB_PORT=5432
DB_NAME=solar_forecasting
DB_USER=postgres
DB_PASSWORD=your_secure_password
DB_SCHEMA=public

# Database connection settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# Database URLs (auto-generated from above settings)
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
ASYNC_DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# =============================================================================
# MLFLOW CONFIGURATION
# =============================================================================
# MLflow tracking and model registry
MLFLOW_TRACKING_URI=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
MLFLOW_ARTIFACT_ROOT=s3://mlflow-artifacts
MLFLOW_S3_ENDPOINT_URL=http://localhost:4566
MLFLOW_EXPERIMENT_NAME=solar-forecasting-experiment

# MLflow UI settings
MLFLOW_UI_HOST=0.0.0.0
MLFLOW_UI_PORT=5000
MLFLOW_BACKEND_STORE_URI=${MLFLOW_TRACKING_URI}
MLFLOW_DEFAULT_ARTIFACT_ROOT=${MLFLOW_ARTIFACT_ROOT}

# =============================================================================
# AWS / LOCALSTACK CONFIGURATION
# =============================================================================
# Localstack S3 settings (for development)
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test
AWS_DEFAULT_REGION=us-east-1
AWS_ENDPOINT_URL=http://localhost:4566

# S3 Buckets
S3_BUCKET_ARTIFACTS=mlflow-artifacts
S3_BUCKET_DATA=solar-data
S3_BUCKET_MODELS=solar-models
S3_BUCKET_MONITORING=monitoring-data

# Localstack services
LOCALSTACK_HOST=localhost
LOCALSTACK_PORT=4566
LOCALSTACK_SERVICES=s3,rds,lambda

# =============================================================================
# PREFECT CONFIGURATION
# =============================================================================
# Prefect workflow orchestration
PREFECT_API_URL=http://localhost:4200/api
PREFECT_UI_URL=http://localhost:4200
PREFECT_LOGGING_LEVEL=INFO
PREFECT_HOME=./prefect_home

# Prefect database (can use same as main DB or separate)
PREFECT_ORION_DATABASE_CONNECTION_URL=${DATABASE_URL}

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Evidently monitoring settings
EVIDENTLY_WORKSPACE=./evidently_workspace
MONITORING_BATCH_SIZE=1000
DRIFT_DETECTION_THRESHOLD=0.1
PERFORMANCE_THRESHOLD_RMSE=0.5

# Metrics storage
METRICS_TABLE_NAME=monitoring_metrics
DRIFT_TABLE_NAME=drift_reports
PERFORMANCE_TABLE_NAME=model_performance

# =============================================================================
# GRAFANA CONFIGURATION
# =============================================================================
# Grafana dashboard settings
GRAFANA_HOST=localhost
GRAFANA_PORT=3000
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin
GRAFANA_DATABASE_URL=${DATABASE_URL}

# Dashboard settings
GRAFANA_ORG_NAME=Solar Forecasting MLOps
GRAFANA_ORG_ID=1

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================
# Model training settings
MODEL_TYPE=random_forest
TARGET_COLUMN=AC_POWER
FEATURES_WEATHER=AMBIENT_TEMPERATURE,MODULE_TEMPERATURE,IRRADIATION
FEATURES_TEMPORAL=hour,day_of_year,season

# Training parameters
TRAIN_TEST_SPLIT_RATIO=0.8
VALIDATION_SPLIT_RATIO=0.2
RANDOM_SEED=42
CV_FOLDS=5

# Model registry settings
MODEL_REGISTRY_NAME=solar-forecasting-models
MODEL_STAGE_STAGING=Staging
MODEL_STAGE_PRODUCTION=Production
MODEL_VERSION_ALIAS=latest

# =============================================================================
# BATCH PREDICTION CONFIGURATION
# =============================================================================
# Batch processing settings
BATCH_PREDICTION_SCHEDULE=0 23 * * *  # Daily at 23:00
BATCH_SIZE=1000
PREDICTION_HORIZON_HOURS=24
BATCH_OUTPUT_TABLE=predictions

# Data processing
DATA_REFRESH_SCHEDULE=0 22 * * *  # Daily at 22:00
DATA_RETENTION_DAYS=90
DATA_VALIDATION_ENABLED=true

# =============================================================================
# API CONFIGURATION
# =============================================================================
# FastAPI settings (if web service deployment)
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=true

# API security
API_SECRET_KEY=your_super_secret_key_change_in_production
API_ACCESS_TOKEN_EXPIRE_MINUTES=30
API_ALGORITHM=HS256

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker compose settings
DOCKER_COMPOSE_PROJECT_NAME=solar-forecasting-mlops
DOCKER_NETWORK=solar-network

# Service ports
POSTGRES_PORT=5432
MLFLOW_PORT=5000
GRAFANA_PORT=3000
PREFECT_PORT=4200
LOCALSTACK_PORT=4566
ADMINER_PORT=8080

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Development and testing
TEST_DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}_test
JUPYTER_PORT=8888
JUPYTER_TOKEN=your_jupyter_token

# Code quality
PRE_COMMIT_ENABLED=true
AUTO_FORMAT_ON_SAVE=true
LINTING_ENABLED=true

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================
# Production-specific settings (override in production .env)
# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=WARNING
# AWS_ENDPOINT_URL=  # Use real AWS in production
# MLFLOW_TRACKING_URI=  # Use production MLflow server
